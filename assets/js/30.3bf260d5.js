(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{613:function(a,r,t){"use strict";t.r(r);var s=t(17),e=Object(s.a)({},(function(){var a=this,r=a.$createElement,t=a._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"arrays使用功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arrays使用功能"}},[a._v("#")]),a._v(" Arrays使用功能")]),a._v(" "),t("h3",{attrs:{id:"复制数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复制数组"}},[a._v("#")]),a._v(" 复制数组")]),a._v(" "),t("p",[t("code",[a._v("System.arraycopy()")]),a._v("，用它复制数组比用for循环复制效率要高")]),a._v(" "),t("h3",{attrs:{id:"数组比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组比较"}},[a._v("#")]),a._v(" 数组比较")]),a._v(" "),t("p",[a._v("Arrays类提供了重载后的"),t("code",[a._v("equals()")]),a._v("方法，用来比较整个数组。实际是通过每一个元素使用equals()作比较判断（对于基本类型使用其包装类的equals()方法）")]),a._v(" "),t("h3",{attrs:{id:"数组元素比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组元素比较"}},[a._v("#")]),a._v(" 数组元素比较")]),a._v(" "),t("p",[t("code",[a._v("java.langComparable#compareTo()方法")]),a._v("，如果当前对象小于参数则返回负值，如果相等则返回零，如果当前对象大于参数则返回正值")]),a._v(" "),t("h3",{attrs:{id:"数组排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[a._v("#")]),a._v(" 数组排序")]),a._v(" "),t("p",[a._v("使用内置的排序方法，可以对任意的基本类型数组排序，也可以对任意的对象数组排序，前提是该对象实现了"),t("code",[a._v("Comparable接口")])]),a._v(" "),t("h3",{attrs:{id:"在已排序的数组中查找"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在已排序的数组中查找"}},[a._v("#")]),a._v(" 在已排序的数组中查找")]),a._v(" "),t("p",[a._v("针对"),t("code",[a._v("已排好序的数组")]),a._v("，可以使用"),t("code",[a._v("Arrays.binarySearch()")]),a._v("执行快速查找")])])}),[],!1,null,null,null);r.default=e.exports}}]);